<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="script" type="xstring" value="library(flowAI)%%00010library(flowCore)%%00010library(foreach)%%00010library(doParallel)%%00010library(parallel)%%00010new_dir &lt;- paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/FlowAI&quot;, sep = &quot;&quot;)%%00010dir.create(new_dir)%%00010numCores &lt;- knime.flow.in[[&quot;num.cores&quot;]]%%00010cl &lt;- makeCluster(numCores)%%00010registerDoParallel(cl)%%00010fs &lt;- read.flowSet(files = NULL, path = knime.flow.in[[&quot;dirname&quot;]], pattern = &quot;.fcs&quot;, alter.names = FALSE)%%00010inputs &lt;- 1:length(fs)%%00010names(knime.in)[1] &lt;- &quot;whatevs&quot;%%00010knime.in$whatevs &lt;- as.character(knime.in$whatevs)%%00010names(rframe)[1] &lt;- &quot;whatevsdos&quot;%%00010rframe$whatevsdos &lt;- as.character(rframe$whatevsdos)%%00010if (knime.flow.in[[&quot;html_report&quot;]] == &quot;TRUE&quot;) {%%00010  html_report &lt;- &quot;_QC&quot;%%00010} else {%%00010  html_report &lt;- as.logical(knime.flow.in[[&quot;html_report&quot;]])%%00010}%%00010if (knime.flow.in[[&quot;mini_report&quot;]] == &quot;TRUE&quot;) {%%00010  mini_report &lt;- &quot;_QCmini&quot;%%00010} else {%%00010  mini_report &lt;- as.logical(knime.flow.in[[&quot;mini_report&quot;]])%%00010}%%00010if (knime.flow.in[[&quot;fcsQC&quot;]] == &quot;TRUE&quot;) {%%00010  fcsQC &lt;- &quot;_QC&quot;%%00010} else {%%00010  fcsQC &lt;- as.logical(knime.flow.in[[&quot;fcsQC&quot;]])%%00010}%%00010if (knime.flow.in[[&quot;fcs_highQ&quot;]] == &quot;TRUE&quot;) {%%00010  fcs_highQ &lt;- &quot;_highQC&quot;%%00010} else {%%00010  fcs_highQ &lt;- as.logical(knime.flow.in[[&quot;fcs_highQ&quot;]])%%00010}%%00010if (knime.flow.in[[&quot;fcs_lowQ&quot;]] == &quot;TRUE&quot;) {%%00010  fcs_lowQ &lt;- &quot;_lowQC&quot;%%00010} else {%%00010  fcs_lowQ &lt;- as.logical(knime.flow.in[[&quot;fcs_lowQ&quot;]])%%00010}%%00010if (is.na(as.numeric(knime.flow.in[[&quot;pen_valueFS&quot;]])) == TRUE) {%%00010  pen_valueFS &lt;- knime.flow.in[[&quot;pen_valueFS&quot;]]%%00010} else {%%00010  pen_valueFS &lt;- as.numeric(knime.flow.in[[&quot;pen_valueFS&quot;]])%%00010}%%00010if (is.na(as.numeric(knime.flow.in[[&quot;second_fractionFR&quot;]])) == TRUE) {%%00010  second_fractionFR &lt;- knime.flow.in[[&quot;second_fractionFR&quot;]]%%00010} else {%%00010  second_fractionFR &lt;- as.numeric(knime.flow.in[[&quot;second_fractionFR&quot;]])%%00010}%%00010processInput &lt;- function(i) {  %%00010  flow_auto_qc(%%00010  fcsfiles = fs,%%00010  remove_from = knime.flow.in[[&quot;removefrom&quot;]], %%00010  output = as.numeric(knime.flow.in[[&quot;output&quot;]]), %%00010  timeCh = NULL,%%00010  second_fractionFR = second_fractionFR, %%00010  alphaFR = knime.flow.in[[&quot;alphaFR&quot;]], %%00010  decompFR = as.logical(knime.flow.in[[&quot;decompFR&quot;]]),%%00010  ChRemoveFS = c(rframe[,]), %%00010  outlierFS = as.logical(knime.flow.in[[&quot;outlierFS&quot;]]), %%00010  pen_valueFS = pen_valueFS,%%00010  max_cptFS = knime.flow.in[[&quot;max_cptFS&quot;]], %%00010  ChFM = c(knime.in[,]),  %%00010  sideFM = knime.flow.in[[&quot;sideFM&quot;]], %%00010  neg_valuesFM = as.numeric(knime.flow.in[[&quot;negvaluesFM&quot;]]),%%00010  html_report = html_report, %%00010  mini_report = mini_report, %%00010  fcs_QC = fcsQC,%%00010  fcs_highQ = fcs_highQ, %%00010  fcs_lowQ = fcs_lowQ, %%00010  folder_results = paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/FlowAI/resultsQC&quot;, sep = &quot;&quot;) %%00010  )%%00010}%%00010file_number &lt;- length(list.files(path = knime.flow.in[[&quot;dirname&quot;]], pattern = &quot;.fcs&quot;))%%00010foreach(i = 1:file_number, .packages = c(&quot;flowCore&quot;, &quot;flowAI&quot;)) %dopar% {  %%00010  processInput(i)%%00010}%%00010knime.out &lt;- as.data.frame(exprs(read.FCS(paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/&quot;, knime.flow.in[[&quot;basename&quot;]], sep = &quot;&quot;))))%%00010%%00010%%00010%%00010%%00010%%00010%%00010%%00010%%00010%%00010"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="FlowAI"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="933"/>
<entry key="y-coordinate" type="xint" value="579"/>
<entry key="width" type="xint" value="134"/>
<entry key="height" type="xint" value="18"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="11"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.r.AddTableToRNodeFactory"/>
<entry key="node-name" type="xstring" value="Add Table To R"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-bundle-version" type="xstring" value="3.1.3.v201604221432"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-feature-version" type="xstring" value="3.1.3.v201604221432"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Add Table To R"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
