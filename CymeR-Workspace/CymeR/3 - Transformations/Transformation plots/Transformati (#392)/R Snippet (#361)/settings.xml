<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="script" type="xstring" value="library(flowCore)%%00010fs &lt;- read.flowSet(files = NULL, path = knime.flow.in[[&quot;dirname&quot;]], pattern = &quot;.fcs&quot;, alter.names = FALSE)%%00010#cofactors = estParamFlowVS(fs, channels = c(as.character(t(cols))))%%00010#fs.VS = transFlowVS(fs, c(as.character(t(cols))), cofactors)%%00010dir.create(paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/TransformationPlots&quot;, sep = &quot;&quot;))%%00010dir.create(paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/TransformationPlots/AllPlots&quot;, sep = &quot;&quot;))%%00010cols &lt;- knime.in%%00010for (i in 1:length(fs)) {%%00010%%00009dir.create(paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/TransformationPlots/&quot;, identifier(fs[[i]]), sep = &quot;&quot;))%%00010%%00009for (j in 1:nrow(cols)) {%%00010%%00009  #fcs.VS &lt;- fs.VS[[i]]%%00010       #fcs.VS.df &lt;- as.data.frame(exprs(fcs.VS))%%00010       #fcs.VS.matrix &lt;- as.matrix(fcs.VS.df[as.character(cols[j,])])%%00010       vals &lt;- exprs(fs[[i]])[,as.character(cols[j,])]%%00010       lgcl &lt;- logicleTransform(w = knime.flow.in[[&quot;w&quot;]], t = knime.flow.in[[&quot;t&quot;]], m = knime.flow.in[[&quot;m&quot;]], a = knime.flow.in[[&quot;a&quot;]])%%00010       #fcs.fcst_trans &lt;- transformList(as.character(t(cols[j,])), FCSTransTransform())%%00010       #FCSTrans &lt;- transform(fs[[i]], fcs.fcst_trans) %%00010       est_lgcl &lt;- estimateLogicle(fs[[i]], as.character(cols[j,]))%%00010       fcs.est_lgcl_trans &lt;- exprs(transform(fs[[i]], est_lgcl))%%00010       png(paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/TransformationPlots/AllPlots/&quot;, identifier(fs[[i]]), &quot;_&quot;, as.character(cols[j,]), &quot;.png&quot;, sep = &quot;&quot;))%%00010       par(mfrow = c(2,2), mar = c(3,3,3,1), mgp = c(2,1,0), oma = c(0,0,2,0))%%00010       #plot(density(fcs.VS.matrix), main = paste(&quot;flowVS - Asinh cofactor = &quot;, cofactors[j], sep = &quot;&quot;))%%00010       plot(density(asinh(vals/knime.flow.in[[&quot;asinh&quot;]])), main = &quot;Asinh&quot;)%%00010       plot(density(lgcl(vals)), main = &quot;Logicle&quot;)%%00010       plot(density(fcs.est_lgcl_trans), main = &quot;Estimated logicle&quot;)%%00010       #plot(density(exprs(FCSTrans)), main = &quot;FCSTrans&quot;)%%00010       plot(density(vals), main = &quot;Untransformed&quot;) %%00010       title(paste(identifier(fs[[i]]), &quot;   -   &quot;,  as.character(cols[j,]), sep = &quot;&quot;), outer=TRUE)%%00010       graphics.off()%%00010       file.copy(from = paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/TransformationPlots/AllPlots/&quot;, identifier(fs[[i]]), &quot;_&quot;, as.character(cols[j,]), &quot;.png&quot;, sep = &quot;&quot;), to = paste(knime.flow.in[[&quot;dirname&quot;]], &quot;/TransformationPlots/&quot;, identifier(fs[[i]]), &quot;/&quot;, as.character(cols[j,]), &quot;.png&quot;, sep = &quot;&quot;))%%00010%%00009}%%00010}%%00010knime.out &lt;- knime.in%%00010%%00010%%00010%%00010%%00010%%00010%%00010%%00010"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="transformation%%00010density"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="592"/>
<entry key="y-coordinate" type="xint" value="390"/>
<entry key="width" type="xint" value="134"/>
<entry key="height" type="xint" value="36"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="0"/>
<entry key="defFontSize" type="xint" value="-1"/>
<entry key="annotation-version" type="xint" value="-1"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
<entry key="node-name" type="xstring" value="R Snippet"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-bundle-version" type="xstring" value="3.1.3.v201604221432"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-feature-version" type="xstring" value="3.1.3.v201604221432"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="R Snippet"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
