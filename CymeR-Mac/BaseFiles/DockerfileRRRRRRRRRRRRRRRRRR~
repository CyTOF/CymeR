FROM ubuntu:14.04
MAINTAINER Brian Muchmore "brian.muchmore@genyo.es"

ENV DEBIAN_FRONTEND noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN true

##Install x11 server so that programs that require a display compile correctly
RUN apt-get update -y && \
    apt-get install software-properties-common build-essential python-software-properties wget -y && \
    apt-get install xorg-dev xvfb -y

#Install all the needed fonts for x11
RUN add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ precise universe multiverse" && \
    add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ precise-updates universe multiverse" && \
    apt-get -y update && \
    apt-get install -y -q xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic && \
    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && \
    apt-get install -y -q x-ttcidfont-conf cabextract ttf-mscorefonts-installer && \
    dpkg-reconfigure --default-priority x-ttcidfont-conf && \
    mkfontdir /usr/share/fonts/truetype/msttcorefonts && \
    cp -rs /usr/share/fonts/truetype/msttcorefonts/* /var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType

#Setup x11 as a service
ADD xvfb_init /etc/init.d/xvfb
RUN chmod a+x /etc/init.d/xvfb
ADD xvfb_daemon_run /usr/bin/xvfb-daemon-run
RUN chmod a+x /usr/bin/xvfb-daemon-run
ENV DISPLAY :99

##Install many downstream dependencies
RUN apt-get install unzip libreadline6 libreadline6-dev libcairo2-dev tk8.5 autoconf openssl -y
RUN apt-get install gfortran tk tk-dev tcl tcl-dev libjpeg8 libxml2-dev liblz-dev libicu-dev libtool libssl-dev -y
RUN apt-get install libtiff4-dev libtiff-tools libtiff-opengl libgtk2.0-dev bzip2 libbz2-dev -y
RUN apt-get install libgd2-xpm-dev libpcre++-dev libhdf5-serial-dev libssh2-1 libcurl4-gnutls-dev git-core -y

##Install libcurl from source for R-devel
RUN  mkdir -p /home/developer && \
     wget https://github.com/bagder/curl/archive/master.zip -O /tmp/curl.zip -q && \
     echo 'Installing curl' && \
     unzip -o /tmp/curl.zip -d /home/developer && \
     cd /home/developer/curl-master && \
     ./buildconf && \
     ./configure && \
     make && \
     make install && \
     rm -rf /tmp/curl.zip

##Install zlib from source for R-devel
RUN wget http://www.zlib.net/zlib-1.2.8.tar.gz -O /tmp/zlib.tar.gz -q && \
    echo 'Installing zlib' && \
    tar -xvzf /tmp/zlib.tar.gz -C /home/developer && \
    rm /tmp/zlib.tar.gz -rf && \
    cd /home/developer/zlib-1.2.8 && \
    ./configure && \
    make && \
    make install

##Install LinearTimeNeRV
RUN apt-get install libncurses5-dev libncursesw5-dev -y && \
    wget http://research.cs.aalto.fi/pml/software/LinearTimeNeRV/linearnerv-0.9.0.tar.gz -O /tmp/lineartimenerv.tar.gz -q && \
    echo 'Installing lineartimenerv' && \
    tar -xf /tmp/lineartimenerv.tar.gz -C /home/developer && \
    rm /tmp/lineartimenerv.tar.gz -rf && \
    cd /home/developer/lineartimenerv && \
    make linearnerv

##Install Java8
RUN add-apt-repository ppa:webupd8team/java && \
    apt-get update -y && \
    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
    xvfb-run -a apt-get install oracle-java8-installer libxext-dev libxrender-dev libxtst-dev -y && \
    xvfb-run -a apt-get install liblzma-dev -y && \
    xvfb-run -a apt-get install libglu1-mesa-dev -y

##Get Python working with KNIME. This installs R, so it must be run before the R version you want installed systemwide.
RUN apt-get install python-numpy python-pandas python-protobuf -y

##Install R with Atlas (OpenBLAS doesn't seem to play nice with library(parallel))
RUN echo 'deb http://lib.stat.cmu.edu/R/CRAN/bin/linux/ubuntu trusty/' >> /etc/apt/sources.list && \ 
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 && \ 
    xvfb-run -a apt-get update -y && \
    xvfb-run -a apt-get install r-base -y && \
    xvfb-run -a apt-get install r-base-dev -y && \
    xvfb-run -a apt-get install libatlas3gf-base liblapack3gf xclip xsel -y

##Download KNIME
RUN echo 'Installing knime' && \
    wget http://download.knime.org/analytics-platform/linux/knime_3.1.0.linux.gtk.x86_64.tar.gz -O /tmp/knime.tar.gz -q && \
    tar -xf /tmp/knime.tar.gz -C /home/developer && \
    rm /tmp/knime.tar.gz && \
    apt-get install libwebkitgtk-1.0-0 -y

##Install needed KNIME extensions
RUN cd /home/developer/knime_3.1.0 && \
    ./knime -clean -purgeHistory -application org.eclipse.equinox.p2.director -noSplash -repository http://update.knime.org/analytics-platform/3.1 -repository http://update.knime.org/community-contributions/trunk -repository http://update.knime.org/community-contributions/trusted/3.1 -repository http://update.knime.org/community-contributions/3.1 -installIUs org.pasteur.pf2.ngs -installIUs com.mind_era.knime_rapidminer.knime.feature.feature.group -installIUs org.knime.features.dbdrivers.feature.group -installIUs org.knime.features.ext.birt.feature.group -installIUs org.knime.ext.jfreechart -installIUs org.knime.python.nodes -installIUs org.knime.features.js.views.feature.group -installIUs com.knime.features.reporting.designer.feature.group -installIUs org.knime.features.r.feature.group -installIUs org.erlwood.features.core.base.feature.group -installIUs org.knime.features.arima.feature.group -installIUs org.knime.features.activelearning.feature.group -installIUs org.knime.features.stats2.feature.group -installIUs org.knime.features.virtual.feature.group -installIUs org.knime.features.distmatrix.feature.group -installIUs org.knime.features.ext.itemset.feature.group -installIUs org.knime.features.exttool.feature.group -installIUs org.knime.features.base.filehandling.feature.group -installIUs org.lhasalimited.knime.public.feature.feature.group -installIUs es.unican.knime.stark.feature.feature.group -vmargs -Declipse.p2.mirrors=true -Djava.net.preferIPv4Stack=true
##Repository: http://update.knime.org/community-contributions/trunk
##Repository: http://update.knime.org/community-contributions/trusted/3.1
##Repository: http://update.knime.org/community-contributions/3.1
##Repository: http://update.knime.org/analytics-platform/3.1
##Javascript: org.knime.features.js.views.feature.group
##JfreeCharts: org.knime.ext.jfreechart
##Python: org.knime.python.nodes
##Table Writers: org.knime.features.ext.birt.feature.group
##Reporting: com.knime.features.reporting.designer.feature.group
##R and flow variables: org.knime.features.r.feature.group
##Bash: org.pasteur.pf2.ngs
##RapidMiner: com.mind_era.knime_rapidminer.knime.feature.feature.group
##Database Drivers: org.knime.features.dbdrivers.feature.group
##ARIMA: org.knime.features.arima.feature.group
##Active learning: org.knime.features.activelearning.feature.group
##Extra stats: org.knime.features.stats2.feature.group 
##Parallelizing branches of a workflow: org.knime.features.virtual.feature.group
##Distance matrices: org.knime.features.distmatrix.feature.group
##Apriori: org.knime.features.ext.itemset.feature.group
##External tools: org.knime.features.exttool.feature.group
##File handling: org.knime.features.base.filehandling.feature.group
##Dumb joiner etc: org.lhasalimited.knime.public.feature.feature.group
##Self-Tuning Association Rules: es.unican.knime.stark.feature.feature.group

##Get the correct verion of R working with KNIME and put KNIME in expert mode
RUN R CMD javareconf && \
    echo '/usr/local/lib/R/lib/' > /etc/ld.so.conf.d/libR.conf && \
    echo '/usr/lib/jvm/java-8-oracle/jre/lib/amd64' > /etc/ld.so.conf.d/java.conf && \
    echo '/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server' >> /etc/ld.so.conf.d/java.conf && \
    ldconfig && \
    echo '-Djava.library.path=/usr/local/lib/R/library/jri/' >> /home/developer/knime_3.1.0/knime.ini && \
    echo '-Dknime.expert.mode=true' >> /home/developer/knime_3.1.0/knime.ini
  
##Install R packages (we install Impute from Bioconductor first for package samr)
RUN echo 'source("http://bioconductor.org/biocLite.R")' > /home/developer/packages.R && \
    echo 'biocLite("impute")' >> /home/developer/packages.R && \
    echo 'install.packages("rJava", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("checkpoint", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("RGtk2", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("RGtk2Extras", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tcltk2", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("BH", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("rCUR", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("foreach", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("doParallel", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("glmnet", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("pamr", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("samr", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("shiny", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("brew", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("devtools", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tabplot", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("googleVis", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("matrixStats", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("Rtsne", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("FeaLect", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("apcluster", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("doMC", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("loe", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("KODAMA", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tpe", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("ROCR", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("RFOC", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("linkcomm", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("SNFtool", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("densityClust", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("Rserve", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("rChoiceDialogs", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("png", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("jpeg", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tm", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("rtiff", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("gWidgets", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'install.packages("gWidgets2RGtk2", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    xvfb-run -a Rscript /home/developer/packages.R

##Install Bioconductor R packages:
 echo 'source("http://bioconductor.org/biocLite.R")' > /home/developer/packagesBio.R && \
    echo 'biocLite("FlowRepositoryR")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("flowCore")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("openCyto")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("spade")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("FlowSOM")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("flowClean")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("QUALIFIER")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("flowBeads")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("cytofkit")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("flowCL")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("marray")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("limma")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("flowVS")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("RchyOptimyx")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("flowUtils")' >> /home/developer/packagesBio.R && \
    echo 'biocLite("iClusterPlus")' >> /home/developer/packagesBio.R && \
    xvfb-run -a Rscript /home/developer/packagesBio.R

##Install Github R packages:
RUN echo 'options(unzip = "internal")' > /home/developer/packagesGit.R && \
    echo 'devtools::install_github("citrus", username="nolanlab")' >> /home/developer/packagesGit.R && \
    echo 'devtools::install_github("cytofCore", username="nolanlab")' >> /home/developer/packagesGit.R && \
    echo 'devtools::install_github("MouseImmuneReference", username="nolanlab")' >> /home/developer/packagesGit.R && \
    echo 'devtools::install_github("nolanlab/scaffold", auth_token = "878ffc928a754892f3d89a5cf5eeb952c3575d5b")' >> /home/developer/packagesGit.R && \
    echo 'devtools::install_github("ggflow", username="nbafrank")' >> /home/developer/packagesGit.R && \
    xvfb-run -a Rscript /home/developer/packagesGit.R

##Install R package(s) from source (ggcyto needs R-devel installed):
RUN wget https://cran.r-project.org/src/contrib/Archive/NetPreProc/NetPreProc_1.0.tar.gz -O /tmp/NetPreProc_1.0.tar.gz -q && \
    echo 'install.packages("/tmp/NetPreProc_1.0.tar.gz", repos = NULL, type = "source")' > /home/developer/packagesSource.R && \
##wget https://github.com/RGLab/ggcyto/archive/trunk.zip -O /tmp/ggcyto -q && \
##unzip -o /tmp/ggcyto -d /home/developer/ggcyto && \
##echo 'install.packages("/home/developer/ggcyto/ggcyto-trunk", repos = NULL, dependencies = TRUE)' >> /home/developer/packagesSource.R && \
    xvfb-run -a Rscript /home/developer/packagesSource.R && \
    rm /tmp/NetPreProc_1.0.tar.gz && \
##rm /tmp/ggcyto

##Install H2O
RUN echo 'Installing H2O' && \
    wget http://h2o-release.s3.amazonaws.com/h2o/rel-slater/5/h2o-3.2.0.5.zip -O /tmp/h2o.zip -q && \
    unzip -o /tmp/h2o.zip -d /home/developer && \
    rm -rf /tmp/h2o.zip

##Install flowiQC. Downloading does not always work, so unzip was throwing an error. Unzipping with jar seems to yield no error even for a corrupted file.
RUN wget https://github.com/SIgNBioinfo/flowiQC_shinyAPP/archive/master.zip -O /home/developer/flowiQC.zip -q && \
    jar -xvf /home/developer/flowiQC.zip && \
    rm -rf /home/developer/flowiQC.zip

##Install MSSQL database connector
RUN wget http://www.java2s.com/Code/JarDownload/sqljdbc4/sqljdbc4-3.0.jar.zip -O /home/developer/sqljdbc4.jar.zip -q && \
    jar -xvf /home/developer/sqljdbc4.jar.zip && \
    rm -rf /home/developer/sqljdbc4.jar.zip

##Install Python 3.4
RUN wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tar.xz -O /home/developer/Python-3.4.3.tar.xz -q && \
    cd /home/developer && tar xJf /home/developer/Python-3.4.3.tar.xz && \
    rm -rf /home/developer/Python-3.4.3.tar.xz && \
    cd /home/developer/Python-3.4.3 && ./configure --prefix=/opt/python3.4 && make && make install && \
    apt-get install python3-dev -y

##Install some Python 3.4 libraries
RUN apt-get install libblas-dev liblapack-dev -y && \
    /opt/python3.4/bin/pip3 install numpy && \
    /opt/python3.4/bin/pip3 install scipy && \
    /opt/python3.4/bin/pip3 install scikit-learn && \
    /opt/python3.4/bin/pip3 install ipython && \
    /opt/python3.4/bin/pip3 install pyzmq && \
    /opt/python3.4/bin/pip3 install ipyparallel && \
    /opt/python3.4/bin/pip3 install networkx

##Install PhenoGraph (dependent upon Python 3.4 and its libraries)
RUN wget https://github.com/jacoblevine/PhenoGraph/archive/master.zip -O /home/developer/PhenoGraph.zip -q && \
    unzip -o /home/developer/PhenoGraph.zip -d /home/developer && \
    rm -rf /home/developer/PhenoGraph.zip && \
    cd /home/developer/PhenoGraph-master && /opt/python3.4/bin/python3 setup.py install

##Install Combo
##RUN mkdir -p /home/developer/Combo && \
##    wget http://senseable.mit.edu/community_detection/combo.zip -O /tmp/combo.zip -q && \
##    unzip -o /tmp/combo.zip -d /home/developer/Combo && \
##    rm -rf /tmp/combo.zip && \
##    echo '#!/bin/bash' > /home/developer/prepend.sh && \
##    echo 'content=$(cat /home/developer/Combo/Graph.h)' >> /home/developer/prepend.sh && \
##    echo 'echo -en "#include <stdio.h>\n$content" > /home/developer/Combo/Graph.h' >> /home/developer/prepend.sh && \
##    chmod 777 /home/developer/prepend.sh && \ 
##    /home/developer/prepend.sh && \
##    cd /home/developer/Combo && make

##Install SNAP
##RUN wget https://github.com/snap-stanford/snap/archive/master.zip -O /tmp/snap.zip -q && \
##   unzip -o /tmp/snap.zip -d /home/developer/snap && \
##    rm -rf /tmp/snap.zip && \
##    cd /home/developer/snap/snap-master && make all

##Install RapidMiner --- SOURCEFORGE LINK BROKEN!!!
##RUN wget http://sourceforge.net/projects/rapidminer/files/1.%20RapidMiner/5.3/rapidminer-5.3.013.zip/download -O /tmp/RapidMiner.zip -q && \
##    echo 'Installing RapidMiner' && \
##    unzip -o /tmp/RapidMiner.zip -d /home/developer && \
##    rm -rf /tmp/RapidMiner.zip

##Install MouseImmuneReference
##RUN wget https://s3.amazonaws.com/supplemental.cytobank.org/report_data/report_116/mouse_immune_reference_1000.scaffold -O /home/developer/mouse_immune_reference_1000.scaffold -q

##Install Gephi
##RUN wget https://launchpad.net/gephi/0.8/0.8.2beta/+download/gephi-0.8.2-beta.tar.gz -O /home/developer/gephi-0.8.2-beta.tar.gz -q && \
##    tar -xf /home/developer/gephi-0.8.2-beta.tar.gz -C /home/developer && \
##    rm -rf /home/developer/gephi-0.8.2-beta.tar.gz && \
##    ##Run Gephi: cd /home/developer/gephi && ./bin/gephi && \

##Install Cytoscape
##RUN wget http://chianti.ucsd.edu/cytoscape-3.2.1/cytoscape-3.2.1.tar.gz -O /tmp/cytoscape-3.2.1.tar.gz -q && \
##    tar -xf /tmp/cytoscape-3.2.1.tar.gz -C /home/developer && \
##    rm /tmp/cytoscape-3.2.1.tar.gz -rf && \
##    cd /home/developer/cytoscape-unix-3.2.1 && chmod a+x cytoscape.sh

##Download Cytoscape Plugin ClustnSee - install within Cytoscape
##RUN wget http://tagc.univ-mrs.fr/tagc/download/Software/ClustnSee/ClustnSee.jar -O /home/developer/cytoscape-unix-3.2.1/ClustnSee.jar -q

##Install Firefox
RUN apt-get install firefox -y && \
    firefox -CreateProfile CymeR -no-remote

RUN apt-get install hdf5 -y
RUN echo 'source("http://bioconductor.org/biocLite.R")' > /home/developer/packagesBio.R && \
    echo 'biocLite("ncdfFlow")' >> /home/developer/packagesBio.R && \
    xvfb-run -a Rscript /home/developer/packagesBio.R

RUN apt-get update -y && \
    apt-get install sudo -y && \
    mkdir -p /etc/sudoers.d && \
    chmod +x /home/developer/knime_3.1.0 && \
    echo "developer:x:1000:1000:Developer,,,:/home/developer:/bin/bash" >> /etc/passwd && \
    echo "developer:x:1000:" >> /etc/group && \
    echo "developer ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/developer && \
    chmod 0440 /etc/sudoers.d/developer && \
    chown developer:developer -R /home/developer && \
    chown root:root /usr/bin/sudo && chmod 4755 /usr/bin/sudo

USER developer
ENV HOME /home/developer
WORKDIR /home/developer
CMD /home/developer/knime_3.1.0/knime -data /home/developer/knime-workspace 









