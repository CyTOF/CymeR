FROM ubuntu:12.04
MAINTAINER Brian Muchmore "brian.muchmore@genyo.es"

ENV DEBIAN_FRONTEND noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN true

##Install many downstream dependencies
RUN apt-get update -y && \
    apt-get install build-essential libreadline6 libreadline6-dev libcairo2-dev xorg-dev tk8.5 autoconf openssl -y && \
    apt-get install gfortran tk tk-dev tcl tcl-dev libjpeg8 libtiff4 libxml2-dev liblz-dev libicu-dev libtool libssl-dev -y && \ 
    apt-get install libtiff4-dev libtiff-tools libtiffxx0c2 libtiff-opengl libgtk2.0-dev bzip2 libbz2-dev -y && \
    apt-get install wget unzip libgd2-xpm-dev libpcre++-dev libhdf5-serial-dev libssh2-1 libcurl4-gnutls-dev git-core -y && \

##Install libcurl from source for R-devel
     mkdir -p /home/developer && \
     wget https://github.com/bagder/curl/archive/master.zip -O /tmp/curl.zip -q && \
     echo 'Installing curl' && \
     unzip -o /tmp/curl.zip -d /home/developer && \
     cd /home/developer/curl-master && \
     ./buildconf && \
     ./configure && \
     make && \
     make install && \
     rm -rf /tmp/curl.zip && \

##Install zlib from source for R-devel
    wget http://www.zlib.net/zlib-1.2.8.tar.gz -O /tmp/zlib.tar.gz -q && \
    echo 'Installing zlib' && \
    tar -xvzf /tmp/zlib.tar.gz -C /home/developer && \
    rm /tmp/zlib.tar.gz -rf && \
    cd /home/developer/zlib-1.2.8 && \
    ./configure && \
    make && \
    make install && \

##Install LinearTimeNeRV
    apt-get install libncurses5-dev libncursesw5-dev -y && \
    wget http://research.cs.aalto.fi/pml/software/LinearTimeNeRV/linearnerv-0.9.0.tar.gz -O /tmp/lineartimenerv.tar.gz -q && \
    echo 'Installing lineartimenerv' && \
    tar -xf /tmp/lineartimenerv.tar.gz -C /home/developer && \
    rm /tmp/lineartimenerv.tar.gz -rf && \
    cd /home/developer/lineartimenerv && \
    make linearnerv && \

##Install Java8
    apt-get install python-software-properties -y && \
    add-apt-repository ppa:webupd8team/java && \
    apt-get update -y && \
    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
    apt-get install oracle-java8-installer libxext-dev libxrender-dev libxtst-dev -y && \
    apt-get install liblzma-dev -y && \
    apt-get install libglu1-mesa-dev -y && \

##Get Python working with KNIME. This installs R, so it must be run before the R version you want installed systemwide.
    apt-get install python-numpy python-pandas python-protobuf -y && \

##Install R (from source due to no Xserver) with Atlas (OpenBLAS doesn't seem to play nice with library(parallel))
    wget https://stat.ethz.ch/R/daily/R-devel.tar.gz --no-check-certificate -O /tmp/R.tar.gz -q && \
    tar -xf /tmp/R.tar.gz -C /home/developer && \
    rm /tmp/R.tar.gz && \
    cd /home/developer/R-devel && \
    ./configure --with-recommended-packages=no --without-x --with-tcltk --with-aqua --with-ICU --with-cairo --with-libpng --with-libtiff --with-jpeglib --enable-R-shlib --enable-BLAS-shlib --enable-memory-profiling && \  
    make && \
    make check && \
    make install && \
    apt-get install libatlas3gf-base liblapack3gf xclip xsel -y && \

##Download KNIME
    wget http://download.knime.org/analytics-platform/linux/knime_3.0.1.linux.gtk.x86_64.tar.gz -O /tmp/knime.tar.gz -q && \
    echo 'Installing knime' && \
    tar -xf /tmp/knime.tar.gz -C /home/developer && \
    rm /tmp/knime.tar.gz && \
    apt-get install libwebkitgtk-1.0-0 -y && \

##Install needed KNIME extensions
    cd /home/developer/knime_3.0.1 && \
    ./knime -clean -purgeHistory -application org.eclipse.equinox.p2.director -noSplash -repository http://update.knime.org/analytics-platform/3.0 -repository http://update.knime.org/community-contributions/trunk -repository http://update.knime.org/community-contributions/trusted/3.0 -repository http://update.knime.org/community-contributions/3.0 -installIUs org.pasteur.pf2.ngs -installIUs com.mind_era.knime_rapidminer.knime.feature.feature.group -installIUs org.knime.ext.jep -installIUs org.knime.ensembles -installIUs org.knime.features.dbdrivers.feature.group -installIUs org.knime.features.xml.feature.group -installIUs org.knime.features.ext.birt.feature.group -installIUs org.knime.ext.jfreechart -installIUs org.knime.python.nodes -installIUs org.knime.features.js.views.feature.group -installIUs com.knime.features.reporting.designer.feature.group -installIUs org.knime.features.core.streaming.feature.group -installIUs org.knime.features.r.feature.group -installIUs org.erlwood.features.core.base.feature.group -vmargs -Declipse.p2.mirrors=true -Djava.net.preferIPv4Stack=true && \
##Repository: http://update.knime.org/community-contributions/trunk
##Repository: http://update.knime.org/community-contributions/trusted/3.0
##Repository: http://update.knime.org/community-contributions/3.0
##Repository: http://update.knime.org/analytics-platform/3.0
##Javascript: org.knime.features.js.views.feature.group
##JfreeCharts: org.knime.ext.jfreechart
##Python: org.knime.python.nodes
##Table Writers: org.knime.features.ext.birt.feature.group
##Reporting: com.knime.features.reporting.designer.feature.group
##R and flow variables: org.knime.features.r.feature.group
##Streaming: org.knime.features.core.streaming.feature.group
##Bash: org.pasteur.pf2.ngs
##Math Formula: org.knime.ext.jep
##Tree ensembles: org.knime.ensembles
##RapidMiner: com.mind_era.knime_rapidminer.knime.feature.feature.group
##Database Drivers: org.knime.features.dbdrivers.feature.group
##XML: org.knime.features.xml.feature.group

##Get the correct verion of R working with KNIME and put KNIME in expert mode
    R CMD javareconf && \
    echo '/usr/local/lib/R/lib/' > /etc/ld.so.conf.d/libR.conf && \
    ldconfig && \
    echo '-Djava.library.path=/usr/local/lib/R/library/jri/' >> /home/developer/knime_3.0.1/knime.ini && \
    echo '-Dknime.expert.mode=true' >> /home/developer/knime_3.0.1/knime.ini && \
##    rm -f /home/developer/knime-workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.knime.ext.r.bin.prefs && \
##    echo 'eclipse.preferences.version=1' > /home/developer/knime-workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.knime.ext.r.bin.prefs && \
##    echo 'knime.r.home=/usr/local/lib/R' >> /home/developer/knime-workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.knime.ext.r.bin.prefs && \
  
##Install R packages
    echo 'install.packages("rJava", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' > /home/developer/packages.R && \
    echo 'source("http://bioconductor.org/biocLite.R")' >> /home/developer/packages.R && \
    echo 'biocLite("impute")' >> /home/developer/packages.R && \
    echo 'install.packages("checkpoint", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("RGtk2", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("RGtk2Extras", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tcltk2", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("BH", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("rCUR", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("foreach", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("doParallel", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("glmnet", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("pamr", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("samr", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("shiny", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("brew", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("devtools", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tabplot", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("googleVis", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("matrixStats", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("Rtsne", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("FeaLect", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("apcluster", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("doMC", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("loe", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("KODAMA", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("tpe", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("ROCR", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("RFOC", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("linkcomm", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("SNFtool", repos="http://mran.revolutionanalytics.com/snapshot/2015-12-01")' >> /home/developer/packages.R && \
    echo 'install.packages("densityClust", repos="http://mran.revolutionanalytics.com/snapshot/2015-11-01")' >> /home/developer/packages.R && \
    echo 'biocLite("FlowRepositoryR")' >> /home/developer/packages.R && \
    echo 'biocLite("flowCore")' >> /home/developer/packages.R && \
    echo 'biocLite("openCyto")' >> /home/developer/packages.R && \
    echo 'biocLite("spade")' >> /home/developer/packages.R && \
    echo 'biocLite("FlowSOM")' >> /home/developer/packages.R && \
    echo 'biocLite("flowClean")' >> /home/developer/packages.R && \
    echo 'biocLite("QUALIFIER")' >> /home/developer/packages.R && \
    echo 'biocLite("flowBeads")' >> /home/developer/packages.R && \
    echo 'biocLite("cytofkit")' >> /home/developer/packages.R && \
    echo 'biocLite("flowCL")' >> /home/developer/packages.R && \
    echo 'biocLite("marray")' >> /home/developer/packages.R && \
    echo 'biocLite("limma")' >> /home/developer/packages.R && \
    echo 'biocLite("flowVS")' >> /home/developer/packages.R && \
    echo 'biocLite("RchyOptimyx")' >> /home/developer/packages.R && \
    echo 'biocLite("flowUtils")' >> /home/developer/packages.R && \
    echo 'biocLite("iClusterPlus")' >> /home/developer/packages.R && \
    echo 'options(unzip = "internal")' >> /home/developer/packages.R && \
    echo 'devtools::install_github("citrus", username="nolanlab")' >> /home/developer/packages.R && \
    echo 'devtools::install_github("cytofCore", username="nolanlab")' >> /home/developer/packages.R && \
    echo 'devtools::install_github("MouseImmuneReference", username="nolanlab")' >> /home/developer/packages.R && \
    echo 'devtools::install_github("nolanlab/scaffold", auth_token = "878ffc928a754892f3d89a5cf5eeb952c3575d5b")' >> /home/developer/packages.R && \
    echo 'devtools::install_github("ggflow", username="nbafrank")' >> /home/developer/packages.R && \
##Install R package(s) from source:
    wget https://cran.r-project.org/src/contrib/Archive/NetPreProc/NetPreProc_1.0.tar.gz -O /tmp/NetPreProc_1.0.tar.gz -q && \
    echo 'install.packages("/tmp/NetPreProc_1.0.tar.gz", repos = NULL, type = "source")' >> /home/developer/packages.R && \
    wget https://github.com/RGLab/ggcyto/archive/trunk.zip -O /tmp/ggcyto -q && \
    unzip -o /tmp/ggcyto -d /home/developer/ggcyto && \
    echo 'install.packages("/home/developer/ggcyto/ggcyto-trunk", repos = NULL, dependencies = TRUE)' >> /home/developer/packages.R && \
##NOT NEEDED - echo 'install.packages("h2o", repos="http://mran.revolutionanalytics.com/snapshot/2015-09-01")' >> /home/developer/packages.R && \
##NOT NEEDED - echo 'devtools::install_github("scaffold", username="nolanlab", auth_token = "878ffc928a754892f3d89a5cf5eeb952c3575d5b")' >> /home/developer/packages.R && \
##NOT WORKING - echo 'biocLite("flowQ")' >> /home/developer/packages.R && \

##Run the R packages install script
    Rscript /home/developer/packages.R && \

##Remove manually downloaded R package(s)
    rm /tmp/NetPreProc_1.0.tar.gz && \
    rm /tmp/ggcyto && \

##Install H2O
    wget http://h2o-release.s3.amazonaws.com/h2o/rel-slater/5/h2o-3.2.0.5.zip -O /tmp/h2o.zip -q && \
    echo 'Installing H2O' && \
    unzip -o /tmp/h2o.zip -d /home/developer && \
    rm -rf /tmp/h2o.zip && \

##Install flowiQC. Downloading does not always work, so unzip was throwing an error. Unzipping with jar seems to yield no error even for a corrupted file.
    wget https://github.com/SIgNBioinfo/flowiQC_shinyAPP/archive/master.zip -O /home/developer/flowiQC.zip -q && \
    jar -xvf /home/developer/flowiQC.zip && \
    rm -rf /home/developer/flowiQC.zip && \

##Install MSSQL database connector
   wget http://www.java2s.com/Code/JarDownload/sqljdbc4/sqljdbc4-3.0.jar.zip -O /home/developer/sqljdbc4.jar.zip -q && \
   jar -xvf /home/developer/sqljdbc4.jar.zip && \
   rm -rf /home/developer/sqljdbc4.jar.zip && \

##Install Python 3.4 and PhenoGraph
    wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tar.xz -O /home/developer/Python-3.4.3.tar.xz -q && \
    cd /home/developer && tar xJf /home/developer/Python-3.4.3.tar.xz && \
    rm -rf /home/developer/Python-3.4.3.tar.xz && \
    cd /home/developer/Python-3.4.3 && ./configure --prefix=/opt/python3.4 && make && make install && \
    apt-get install python3-dev -y && \
    /opt/python3.4/bin/pip3 install numpy && \
    /opt/python3.4/bin/pip3 install scipy && \
    /opt/python3.4/bin/pip3 install scikit-learn && \
    /opt/python3.4/bin/pip3 install ipython && \
    /opt/python3.4/bin/pip3 install pyzmq && \
    /opt/python3.4/bin/pip3 install ipyparallel && \
    /opt/python3.4/bin/pip3 install networkx && \
    wget https://github.com/jacoblevine/PhenoGraph/archive/master.zip -O /home/developer/PhenoGraph.zip -q && \
    unzip -o /home/developer/PhenoGraph.zip -d /home/developer && \
    rm -rf /home/developer/PhenoGraph.zip && \
    cd /home/developer/PhenoGraph-master && /opt/python3.4/bin/python3 setup.py install && \
    mv /home/developer/PhenoGraph-master/phenograph/louvain/linux-hierarchy /opt/python3.4/lib/python3.4/site-packages/PhenoGraph-1.2-py3.4.egg/phenograph/louvain/linux-hierarchy && \
    mv /home/developer/PhenoGraph-master/phenograph/louvain/linux-community /opt/python3.4/lib/python3.4/site-packages/PhenoGraph-1.2-py3.4.egg/phenograph/louvain/linux-community && \
    mv /home/developer/PhenoGraph-master/phenograph/louvain/linux-convert /opt/python3.4/lib/python3.4/site-packages/PhenoGraph-1.2-py3.4.egg/phenograph/louvain/linux-convert && \

##Install Combo
    mkdir -p /home/developer/Combo && \
    wget http://senseable.mit.edu/community_detection/combo.zip -O /tmp/combo.zip -q && \
    unzip -o /tmp/combo.zip -d /home/developer/Combo && \
    rm -rf /tmp/combo.zip && \
    echo '#!/bin/bash' > /home/developer/prepend.sh && \
    echo 'content=$(cat /home/developer/Combo/Graph.h)' >> /home/developer/prepend.sh && \
    echo 'echo -en "#include <stdio.h>\n$content" > /home/developer/Combo/Graph.h' >> /home/developer/prepend.sh && \
    chmod 777 /home/developer/prepend.sh && \ 
    /home/developer/prepend.sh && \
    cd /home/developer/Combo && make && \

##Install SNAP
    wget https://github.com/snap-stanford/snap/archive/master.zip -O /tmp/snap.zip -q && \
    unzip -o /tmp/snap.zip -d /home/developer/snap && \
    rm -rf /tmp/snap.zip && \
    cd /home/developer/snap/snap-master && make all && \

##Install RapidMiner --- SOURCEFORGE LINK BROKEN!!!
##    wget http://sourceforge.net/projects/rapidminer/files/1.%20RapidMiner/5.3/rapidminer-5.3.013.zip/download -O /tmp/RapidMiner.zip -q && \
##    echo 'Installing RapidMiner' && \
##    unzip -o /tmp/RapidMiner.zip -d /home/developer && \
##    rm -rf /tmp/RapidMiner.zip && \

##Replace PhenoGraph binaries:
##    rm -rf /usr/local/lib/python3.4/dist-packages/PhenoGraph-1.0-py3.4.egg/phenograph/louvain/convert && \
##    rm -rf /usr/local/lib/python3.4/dist-packages/PhenoGraph-1.0-py3.4.egg/phenograph/louvain/community && \
##    rm -rf /usr/local/lib/python3.4/dist-packages/PhenoGraph-1.0-py3.4.egg/phenograph/louvain/hierarchy && \
##    mv /home/developer/Data/binaries/convert /usr/local/lib/python3.4/dist-packages/PhenoGraph-1.0-py3.4.egg/phenograph/louvain/convert && \
##    mv /home/developer/Data/binaries/community /usr/local/lib/python3.4/dist-packages/PhenoGraph-1.0-py3.4.egg/phenograph/louvain/community && \
##    mv /home/developer/Data/binaries/hierarchy /usr/local/lib/python3.4/dist-packages/PhenoGraph-1.0-py3.4.egg/phenograph/louvain/hierarchy && \

##Install MouseImmuneReference
##   wget https://s3.amazonaws.com/supplemental.cytobank.org/report_data/report_116/mouse_immune_reference_1000.scaffold -O /home/developer/mouse_immune_reference_1000.scaffold -q && \

##Install Gephi
##    wget https://launchpad.net/gephi/0.8/0.8.2beta/+download/gephi-0.8.2-beta.tar.gz -O /home/developer/gephi-0.8.2-beta.tar.gz -q && \
##    tar -xf /home/developer/gephi-0.8.2-beta.tar.gz -C /home/developer && \
##    rm -rf /home/developer/gephi-0.8.2-beta.tar.gz && \
##    ##Run Gephi: cd /home/developer/gephi && ./bin/gephi && \

##Install Cytoscape
##    wget http://chianti.ucsd.edu/cytoscape-3.2.1/cytoscape-3.2.1.tar.gz -O /tmp/cytoscape-3.2.1.tar.gz -q && \
##    tar -xf /tmp/cytoscape-3.2.1.tar.gz -C /home/developer && \
##    rm /tmp/cytoscape-3.2.1.tar.gz -rf && \
##    cd /home/developer/cytoscape-unix-3.2.1 && chmod a+x cytoscape.sh && \
##    ##Run Cytoscape: /home/developer/cytoscape-unix-3.2.1/cytoscape.sh

##Download Cytoscape Plugin ClustnSee - install within Cytoscape
##    wget http://tagc.univ-mrs.fr/tagc/download/Software/ClustnSee/ClustnSee.jar -O /home/developer/cytoscape-unix-3.2.1/ClustnSee.jar -q && \

##Install Firefox
    apt-get install firefox -y









